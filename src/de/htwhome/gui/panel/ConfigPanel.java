/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConfigPanel.java
 *
 * Created on 29.03.2011, 11:42:23
 */

package de.htwhome.gui.panel;

import de.htwhome.devices.ConfigList;
import de.htwhome.devices.Panel;
import de.htwhome.utils.Config;
import java.util.LinkedList;
import java.util.Scanner;
import javax.swing.DefaultListModel;

/**
 *
 * @author Tim Bartsch
 */
public class ConfigPanel extends javax.swing.JPanel implements ConfigChangeListener {
    Panel panel;

    /** Creates new form ConfigPanel */
    public ConfigPanel(Panel panel) {
        initComponents();
	this.panel = panel;
	configList.addListSelectionListener(new ConfigListSelectionListener(this));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configScrollPane = new javax.swing.JScrollPane();
        configList = new javax.swing.JList();
        locationTextField = new javax.swing.JTextField();
        descriptionTextField = new javax.swing.JTextField();
        gidsTextField = new javax.swing.JTextField();
        actorsTextField = new javax.swing.JTextField();
        gidTextField = new javax.swing.JTextField();
        locationLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        gidsLabel = new javax.swing.JLabel();
        actorsLabel = new javax.swing.JLabel();
        gidLabel = new javax.swing.JLabel();
        saveConfigButton = new javax.swing.JButton();

        configScrollPane.setViewportView(configList);

        actorsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actorsTextFieldActionPerformed(evt);
            }
        });

        locationLabel.setText("Ort");

        descriptionLabel.setText("Beschreibung");

        gidsLabel.setText("Gruppen IDs");

        actorsLabel.setText("Aktoren");

        gidLabel.setText("Gruppen ID");

        saveConfigButton.setText("Speichern");
        saveConfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveConfigButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gidLabel)
                            .addComponent(actorsLabel)
                            .addComponent(gidsLabel)
                            .addComponent(descriptionLabel)
                            .addComponent(locationLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(locationTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descriptionTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gidsTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actorsTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gidTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)))
                    .addComponent(saveConfigButton, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(configScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descriptionLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gidsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gidsLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(actorsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actorsLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gidTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gidLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addComponent(saveConfigButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(configScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void actorsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actorsTextFieldActionPerformed
	// TODO add your handling code here:
    }//GEN-LAST:event_actorsTextFieldActionPerformed

    private void saveConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveConfigButtonActionPerformed
	String location = locationTextField.getText();
	String description = descriptionTextField.getText();
	String gids = gidsTextField.getText();
	String actors = actorsTextField.getText();
	String gid = gidTextField.getText();
	int index = configList.getSelectedIndex();
	try{
	    Config cfg = panel.getConfigList().get(index);
	    cfg.setLocation(location);
	    cfg.setDescription(description);
	    cfg.setGidTab(stringToIntTab(gids));
	    cfg.setActorIDTab(stringToIntTab(actors));
	    cfg.setGid(Integer.parseInt(gid));
	    panel.changeConfig(cfg);
	    configList.setSelectedIndex(index);
	}catch(NumberFormatException e){
	    e.printStackTrace();
	}
    }//GEN-LAST:event_saveConfigButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actorsLabel;
    private javax.swing.JTextField actorsTextField;
    private javax.swing.JList configList;
    private javax.swing.JScrollPane configScrollPane;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JLabel gidLabel;
    private javax.swing.JTextField gidTextField;
    private javax.swing.JLabel gidsLabel;
    private javax.swing.JTextField gidsTextField;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JButton saveConfigButton;
    // End of variables declaration//GEN-END:variables

    public void changeEventReceived(ConfigChangeEvent evt) {
	if(evt.getSource() instanceof ConfigList){
	    ConfigList cl = (ConfigList)evt.getSource();
	    DefaultListModel lm = new DefaultListModel();
	    for(Config cfg: cl){
		lm.addElement(cfg);
	    }
	    configList.setModel(lm);
	}
    }

    public void showConfig(int index){
	Config cfg = panel.getConfigList().get(index);
	locationTextField.setText(cfg.getLocation());
	descriptionTextField.setText(cfg.getDescription());
	gidsTextField.setText(intTabToString(cfg.getGidTab()));
	actorsTextField.setText(intTabToString(cfg.getActorIDTab()));
	gidTextField.setText(String.valueOf(cfg.getGid()));
	switch (cfg.getDeviceType()) {
            case Switch:
            case PercentSwitch:
		gidsLabel.setEnabled(false);
		gidsTextField.setEnabled(false);
		actorsLabel.setEnabled(true);
		actorsTextField.setEnabled(true);
		gidLabel.setEnabled(true);
		gidTextField.setEnabled(true);
                break;
            case Anemometer:
            case SmokeDetector:
		gidsLabel.setEnabled(false);
		gidsTextField.setEnabled(false);
		actorsLabel.setEnabled(false);
		actorsTextField.setEnabled(false);
		gidLabel.setEnabled(false);
		gidTextField.setEnabled(false);
                break;
            case DoorOpener:
            case Light:
	    case Shutter:
	    case Sunblind:
	    case Webcam:
	    case Thermometer:
		gidsLabel.setEnabled(true);
		gidsTextField.setEnabled(true);
		actorsLabel.setEnabled(false);
		actorsTextField.setEnabled(false);
		gidLabel.setEnabled(false);
		gidTextField.setEnabled(false);
                break;
        }
    }

    private String intTabToString(int[] tab){
	StringBuilder sb = new StringBuilder();
	if (tab != null) {
	    for (int i = 0; i < tab.length; i++) {
		sb.append(tab[i]);
		if(i < tab.length - 1){
		    sb.append(", ");
		}
	    }
	}
	return sb.toString();
    }

    private int[] stringToIntTab(String s) throws NumberFormatException{
	Scanner sc = new Scanner(s);
	LinkedList<String> list = new LinkedList<String>();
	sc.useDelimiter(",");
	while(sc.hasNext()){
	    String si = sc.next().trim();
	    if(!si.isEmpty()){
		list.add(si);
	    }
	}
	int[] tab = new int[list.size()];
	for(int i=0; i < list.size(); i++){
	    tab[i] = Integer.valueOf(list.get(i));
	}
	return tab;
    }

}
